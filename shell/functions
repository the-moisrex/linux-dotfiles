#!/bin/bash

functions_file_path="$0"

# time the shell startup
timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do time $shell -i -c exit; done
}

# check the time that it takes the shell to start
time-shell() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do time $shell -i -c exit; done
}

function cd {
  builtin cd "$@" && ls -F && echo && echo && pwd;
}

function en {
  if [ "$#" -eq 0 ]; then
    export LANG="en_US.UTF-8" LANGUAGE="en:en_US"
  else
    LANG="en_US.UTF-8" LANGUAGE="en:en_US" $@
  fi
}

function es {
  if [ "$#" -eq 0 ]; then
    export LANG="es_ES.UTF-8" LANGUAGE="es:en_US"
  else
    LANG="es_ES.UTF-8" LANGUAGE="es:en_US" $@
  fi
}


function zsh-stats() {
    fc -l 1 | sed -E 's/[[:space:]]sudo[[:space:]]/ /' | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl | head -n25;
}

function repo_path {
  repo="."
  until [ "$(realpath "$repo")" = "/.git" -o \
          "$(realpath "$repo")" = "/" -o \
          -d "$repo/.git" \
        ]; do
    repo="../${repo}";
  done;
  repo=$(dirname "$repo");
  echo $repo;
}

# git push all
function gpush {
  git remote | while read remote; do echo "git push $remote $(git branch --show-current)"; setsid git push $remote $(git branch --show-current); done
}

# try a command until it works.
function try {
  # Stack overflow issue with this command, and also un-cancelable
  # $@ || try $@;
  while ! $@; do
    sleep 1s; # So we can cancel
  done;
}

# Usage: trynot isup facebook.com && nordvpn connect
function trynot {
  while $@; do
    sleep 1s; # So we can cancel
  done;
}

function reset_proxies {
    export http_proxy=""
    export https_proxy=""
    export all_proxy=""
    export ftp_proxy=""
    export no_proxy=""
    export HTTP_PROXY=""
    export HTTPS_PROXY=""
    export ALL_PROXY=""
    export FTP_PROXY=""
    export NO_PROXY=""
}

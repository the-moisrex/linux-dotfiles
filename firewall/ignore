#!/bin/bash


# Add a domain to the list of domains that don't need to go through VPN
ignored_domains_file="$HOME/.cache/firewall/ignored-domains.txt"


# if you decide to change this directory, change it in the "clear-coredump", and in "net.routes.skip" commands as well
countries_repo="$HOME/.cache/firewall/country-ips"

nft_include_dir="$HOME/.cache/firewall/nft/"
mkdir -p "$nft_include_dir";

countryiso="ir"


function print_help {
    echo "Usage: ignore help";
    echo "       ignore add domain.com"
    echo "       ignore append domain.com"
    echo "       ignore add country ir"
    echo "       ignore del domain.com"
    echo "       ignore remove domain.com"
    echo "       ignore remove country ir"
    echo "       ignore update"
    echo "       ignore update domains"
    echo "       ignore update countries"
    echo
    echo "       ignore list domains"
    echo "       ignore list ips"
    echo "       ignore list ipset"
    echo "       ignore list country ir"
    echo "       ignore list countries"
    echo 
    echo "       ignore nft create country ir"
    # echo "       ignore nft clear country ir"
    # echo "       ignore nft list"
    echo "       ignore nft add country ir"
    # echo "       ignore nft add ignored"
    # echo "       ignore nft remove ignored"
    # echo "       ignore nft remove country ir"
}


function nft_save {
    name="$1"
    ipset="$2"
    file="$nft_include_dir/$name.nft"
    cat > $file <<-END
    set $name {
        type ipv4_addr
        flags interval # enable CIDR and ranges
        elements = {
            $ipset
        }
    }
END
    echo "Saved $name to $file";
}

function nft_create_country {
    name="$1";
    file="$nft_include_dir/$name.nft"
    iso_code="$name";
    if [ -z "$iso_code" ]; then
        iso_code="$countryiso";
    fi
    input="$countries_repo/ipv4/$countryiso.cidr"
    ipset=$(tr '\n' ',' < "$input");
    ipset="${ipset::-1}"
    nft_save $name "$ipset";
}

function nft_add_country {
    name="$1"
    file="$nft_include_dir/$name.nft"
    if [ ! -f "$file" ]; then
        echo no such file: $file
        return;
    fi
    if sudo nft -t list set inet mangle $name &>/dev/null; then
        echo "Already added";
        return;
    fi
    set_source=$(cat "$file");
    sudo nft -f - <<-END
table inet mangle {
    $set_source
}
END

    sudo nft add counter inet mangle skip.$name \{ comment \"Skip GeoIPs for $name country\" \};
    sudo nft add rule inet mangle skipper ip daddr @$name counter name skip.$name goto marker comment \"ignored country with code $name\";
}


function list_domains {
    if [ -f "$ignored_domains_file" ]; then
        while read -r domain; do
            echo $domain;
        done < "$ignored_domains_file";
    fi;
}

function list_ipset {
    sudo nft list set inet mangle ignored
}

function list_ips {
    if [ -f "$ignored_domains_file" ]; then
        while read -r domain; do
            echo $domain;
            while IFS= read -r ip; do
                echo  "  $ip"
            done < <(dig +short +timeout=2 $domain | grep '^[.0-9]*$');
            echo
        done < "$ignored_domains_file";
    fi;
}

function ignore {
    domain="$1"
    if [ -z "$domain" ]; then
        print_help;
        return;
    fi;
    echo "Adding $domain to the ignored list."
    echo $domain >> $ignored_domains_file;
    while IFS= read -r ip; do
        echo  "  Adding ip address $ip to the 'ignored' ip set."
        sudo nft add element inet mangle ignored \{ $ip \}
        ipcount=$(( $ipcount + 1 ));
    done < <(dig +short +timeout=2 $domain | grep '^[.0-9]*$');
    echo "  Added $ipcount IPs to the 'ignored' ipset.";
    echo
}

function unignore {
    domain="$1"
    if [ -z "$domain" ]; then
        print_help;
        return;
    fi;
    echo "Removing $domain from ignored list."
    grep -v "$domain" $ignored_domains_file | sponge $ignored_domains_file
    while IFS= read -r ip; do
        echo  "  Removing ip address $ip from the 'ignored' ip set."
        sudo nft delete element inet mangle ignored \{ $ip \}
        ipcount=$(( $ipcount + 1 ));
    done < <(dig +short +timeout=2 $domain | grep '^[.0-9]*$');
    echo "  Deleted $ipcount IPs from the 'ignored' ipset.";
    echo
}


function update_ignores {
    if [ -f "$ignored_domains_file" ]; then
        while read -r domain; do
            echo "Adding $domain to the ignored list."
            while IFS= read -r ip; do
                echo  "  Adding ip address $ip to the 'ignored' ip set."
                sudo nft add element inet mangle ignored \{ $ip \}
                ipcount=$(( $ipcount + 1 ));
            done < <(dig +short +timeout=2 $domain | grep '^[.0-9]*$');
            echo "  Added $ipcount IPs to the 'ignored' ipset.";
            echo
        done < "$ignored_domains_file";
    fi;
}

function update_countries {
    if [ -d "$countries_repo" ]; then
        echo "Updateing the countries' IPs repository.";
        git -C "$countries_repo" pull --rebase=true --prune --force --depth=1 --progress --no-ff --no-edit --no-commit
    else
        echo "Downloading the countries' IPs repository.";
        git clone --depth=1 -b master https://github.com/herrbischoff/country-ip-blocks.git "$countries_repo"
    fi;
}

function ignore_country {
    iso_code="$1";
    if [ -z "$iso_code" ]; then
        iso_code="$countryiso";
    fi


    input="$countries_repo/ipv4/$countryiso.cidr"

    ipcount=0
    while IFS= read -r ip; do
        echo -ne "\r\033[KAdding ip address $ip to the '$iso_code' ip set."
        sudo nft add element inet mangle geoips4 \{ $ip \};
        ipcount=$(( $ipcount + 1 ));
    done < "$input";
    echo -ne "\r\033[KAdded $ipcount ips for country code '$iso_code'.";
    echo
}

function unignore_country {
    iso_code="$1";
    if [ -z "$iso_code" ]; then
        iso_code="$countryiso";
    fi

    input="$countries_repo/ipv4/$iso_code.cidr"

    ipcount=0
    while IFS= read -r ip; do
        echo  "  Removing ip address $ip from the 'geoips4' ip set."
        sudo nft delete element inet mangle geoips4 \{ $ip \}
        ipcount=$(( $ipcount + 1 ));
    done < "$input";
    echo "  Deleted $ipcount IPs from the 'geoips4' ipset.";
    echo
}

function list_country {
    iso_code="$1";
    if [ -z "$iso_code" ]; then
        iso_code="$countryiso";
    fi

    input="$countries_repo/ipv4/$iso_code.cidr"

    ipcount=0
    while IFS= read -r ip; do
        echo "$ip";
        ipcount=$(( $ipcount + 1 ));
    done < "$input";
    echo "Found $ipcount ips for country code '$iso_code'.";
}

function list_countries_ipset {
    sudo nft list set inet mangle geoips4
}

function update_all {
    update_ignores
    update_countries
    # todo: update individual countries as well
}

case "$1" in
    help)
        print_help;
        ;;
    list)
        case "$2" in
            ipset)
                list_ipset;
                ;;
            ips)
                list_ips;
                ;;
            domains)
                list_domains;
                ;;
            country)
                list_country "$3";
                ;;
            countries)
                list_countries_ipset;
                ;;
            *)
                list_ips;
                ;;
        esac;
        ;;
    update)
        case "$2" in
            countries)
                update_countries;
                ;;
            ignored|ignore|ignores|domains|domain)
                update_ignores;
                ;;
            all|*)
                update_all;
                ;;
        esac
        ;;
    add|append)
        case "$2" in
            country)
                ignore_country "$3";
                ;;
            *)
                ignore "$2";
                ;;
        esac
        ;;
    del|remove)
        case "$2" in
            country)
                unignore_country "$3";
                ;;
            *)
                unignore "$2";
                ;;
        esac
        ;;
    nft)
        case "$2" in
            create)
                case "$3" in
                    ignored)
                        ;;
                    country)
                        nft_create_country "$4";
                        ;;
                    *)
                        echo "Create what?";
                        ;;
                esac
                ;;
            add)
                case "$3" in
                    ignored)
                        ;;
                    country)
                        nft_add_country "$4";
                        ;;
                    *)
                        echo "Add what?";
                        ;;
                esac
                ;;
            *)
                echo "nft file what?";
                ;;
        esac
        ;;
    *)
        print_help;
        ;;
esac;

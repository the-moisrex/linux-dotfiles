#!/bin/bash

# Help function to display usage information
print_help() {
  echo "Usage: $0 [OPTIONS]"
  echo "Finds and prints URLs from stdin, including those in HTML <a> tags."
  echo ""
  echo "Options:"
  echo "  --base-url BASE_URL      Specify the base URL for resolving relative links."
  echo "  --help                   Show this help message and exit."
  echo ""
  echo "Examples:"
  echo "  echo '<a href=\"/path\">link</a>' | $0 --base-url http://example.com"
  echo "  echo 'Text with https://www.example.com' | $0"
}

# Initialize variables
base_url=""

# Parse command-line options
while [[ $# -gt 0 ]]; do
  case "$1" in
    --base-url)
      if [[ "$2" ]]; then
        base_url="$2"
        shift 2
      else
        echo "Error: --base-url option requires a URL." >&2
        print_help
        exit 1
      fi
      ;;
    --help)
      print_help
      exit 0
      ;;
    *)
      echo "Error: Unknown option: $1" >&2
      print_help
      exit 1
      ;;
  esac
done

# Read input from stdin
input_text=$(cat)

# Regular expression for standalone URLs
url_regex='https?://([wW]{3}\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=%]*)'

# Extract href attributes from <a> tags
# Matches <a ... href="..." ...> or <a ... href='...' ...>
hrefs=$(grep -o '<a[^>]*href="[^"]*"\|<a[^>]*href='\''[^'\'']*'\''' <<< "$input_text" | \
        sed -e 's/.*href="\([^"]*\)".*/\1/' -e "s/.*href='\([^']*\)'.*/\1/")

# Extract standalone URLs from the input
standalone_urls=$(grep -oE "$url_regex" <<< "$input_text")

# Array to store all URLs
declare -a all_urls

# Process hrefs: resolve relative URLs if base_url is provided
if [[ -n "$base_url" ]]; then
  while IFS= read -r href; do
    # Use Python's urljoin to resolve relative URLs
    resolved=$(python3 -c "from urllib.parse import urljoin; import sys; print(urljoin(sys.argv[1], sys.argv[2]))" "$base_url" "$href")
    all_urls+=("$resolved")
  done <<< "$hrefs"
else
  # If no base_url, add hrefs as is
  mapfile -t all_urls <<< "$hrefs"
fi

# Add standalone URLs to the array
mapfile -t standalone_array <<< "$standalone_urls"
all_urls=("${all_urls[@]}" "${standalone_array[@]}")

# Print all URLs, one per line
for url in "${all_urls[@]}"; do
  echo "$url"
done

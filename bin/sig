#!/bin/bash

function print_help {
    echo "Send signals to a list of processes and all of their sub-processes"
    echo
    echo "Usage: "
    echo "  sig -stop firefox       # pauses the app"
    echo "      -cont java          # resume the app"
    echo "      cont java           # works without any - in front of it as well"
    echo "      -cont proc1 proc2   # multiple processes"
    echo "      --help|-h"
}

sig="$1"
shift

if [ -z "$sig" ]; then
    print_help;
    exit;
fi

case $sig in
    --help|-h)
        print_help;
        exit;
        ;;
    -*)
        sig="${sig:1}"
        ;;
esac

if ! killall -l | grep -wqsi $sig; then
    echo "'$sig' is not a valid signal;"
    echo "Use one of these signals: "
    killall -l | xargs echo;
    exit;
fi

# while [ -n "$1" ]; do
#     pgid=$(ps -o pgid= $(pidof $1) | grep -o '[0-9]*')
#     echo "Sending '$sig' to $1 (PGID: $pgid)"
#     kill -s $sig -- -$pgid;
#     shift;
# done

space=""
killtree() {
    local pid=$1
    local name=$(ps -p $pid -o comm=)
    # kill -stop ${_pid} # needed to stop quickly forking parent from producing children between child killing and parent killing
    for child in $(ps -o pid --no-headers --ppid ${pid}); do
        space="${space}  "
        killtree ${child}
        space="${space:2}"
    done
    echo "${space}Sending '$sig' to $pid ($name)"
    kill -s $sig ${pid}
}

while [ -n "$1" ]; do
    name="$1"
    pidlist=$(pidof $name)
    if [ -z "$pidlist" ]; then
        echo "Process '$name' not found; ignored."
        shift;
        continue;
    fi
    for pid in $pidlist; do
        killtree $pid "$name"
    done
    shift;
done



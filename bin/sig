#!/bin/bash

function print_help {
    echo "Send signals to a list of processes and all of their sub-processes"
    echo
    echo "Usage: "
    echo "  sig -stop firefox       # pauses the app"
    echo "      -cont java          # resume the app"
    echo "      cont java           # works without any - in front of it as well"
    echo "      -cont proc1 proc2   # multiple processes"
    echo "      toggle proc1 proc2  # Pause/Resume the processes"
    echo "      toggle pick         # Pick the software with KWin"
    echo "      --help|-h"
}

sig="$1"
shift

if [ -z "$sig" ]; then
    print_help;
    exit;
fi

case $sig in
    --help|-h)
        print_help;
        exit;
        ;;
    -*)
        sig="${sig:1}"
        ;;
esac

if ! killall -l | grep -wqsi "$sig"; then
    if [ "$sig" != "toggle" ] && [ "$sig" != "-toggle" ] && [ "$sig" != "--toggle" ]; then
        echo "'$sig' is not a valid signal;"
        echo "Use one of these signals: "
        killall -l | xargs echo;
        exit;
    fi
fi

# while [ -n "$1" ]; do
#     pgid=$(ps -o pgid= $(pidof $1) | grep -o '[0-9]*')
#     echo "Sending '$sig' to $1 (PGID: $pgid)"
#     kill -s $sig -- -$pgid;
#     shift;
# done

function is_running {
    local pid=$1
    # Process states: The most common state mappings are3:
    #    R: Running or Runnable
    #    S: Interruptible Sleep
    #    T: Stopped
    #    D: Uninterruptible Sleep
    #    Z: Zombie
    [ "$(ps -q "$pid" -o state --no-headers)" != "T" ];
}

space=""
killtree() {
    local pid=$1
    local name;

    name=$(ps -p "$pid" -o comm=)

    if [ "$sig" == "toggle" ] || [ "$sig" == "-toggle" ] || [ "$sig" == "--toggle" ]; then
        if is_running "$pid"; then
            sig="STOP";
        else
            sig="CONT";
        fi
    fi

    # kill -stop ${_pid} # needed to stop quickly forking parent from producing children between child killing and parent killing
    for child in $(ps -o pid --no-headers --ppid "${pid}"); do
        space="${space}  "
        killtree "${child}"
        space="${space:2}"
    done
    echo "${space}Sending '$sig' to $pid ($name)"
    kill -s "$sig" "${pid}"
}

while [ -n "$1" ]; do
    name="$1"
    if [ "$name" == "pick" ]; then
        name=$(qdbus6 org.kde.KWin /KWin queryWindowInfo | grep resourceName | awk '{print $2}')
    fi
    pidlist=$(pidof "$name")
    if [ -z "$pidlist" ]; then
        echo "Process '$name' not found; ignored."
        shift;
        continue;
    fi
    for pid in $pidlist; do
        killtree "$pid" "$name"
    done
    shift;
done



#!/bin/bash


function netns_exists {
  local ns="$1"

  while IFS= read -r line; do
    if [ "$ns" == "$line" ]; then
      true
      return
    fi
  done <<< "$(ip netns | cut -d" " -f1)"

  false
}

function link_exists {
  local link="$1"

  while IFS= read -r line; do
    if [ "$link" == "$line" ]; then
      true
      return
    fi
  done <<< "$(ip -oneline link | cut -d" " -f2 | cut -d":" -f1)"

  false
}

function macvlan_exists {
  local macvlan="$1"
  local device="$2"

  link_exists "$macvlan@$device"
}

for i in "$@"; do
  case $i in
    -ln=*|--linkname=*)
      linkname="${i#*=}"
      ;;

    -nsn=*|--nsname|--namespacename)
      nsname="${i#*=}"
      ;;

    -d=*|--device=*)
      device="${i#*=}"
      ;;

    -mn=*|--mvlan=*|--macvlan=*)
      mvlan_name="${i#*=}"
      ;;

  esac
done

if [ -z "$device" ]; then
  if link_exists "eno1"; then
    device="eno1";
  elif link_exists "eth0"; then
    device="eth0";
  elif link_exists "enp2s0"; then
    device="enp2s0"
  elif link_exists "wlan0"; then
    device="wlan0"
  elif link_exists "wlp3s0"; then
    device="wlp3s0"
  elif link_exists "wlp0s20f3"; then
    device="wlp0s20f3"
  else
    >&2 echo "Error: please specify the device to be used.";
    exit;
  fi
fi



if [ -z "$mvlan_name" ]; then
  mvlan_name="mvlan0"
  i=0
  while macvlan_exists $mvlan_name $device; do
    ((i++))
    mvlan_name="mvlan$i"
  done
fi

if macvlan_exists $mvlan_name $device; then
  >&2 echo "Error: the macvlan name ($mvlan_name) already exists."
  exit 1
fi



if [ -z "$linkname" ]; then
  linkname="ln0"
  i=0
  while link_exists $linkname; do
    ((i++))
    linkname="ln$i"
  done
fi

if link_exists "$linkname"; then
  >&2 echo "Error: the link name ($linkname) already exists."
  exit 1
fi


if [ -z "$nsn" ]; then
  nsn="ns0"
  i=0
  while netns_exists $nsn; do
    ((i++))
    nsn="ns$i"
  done
fi

if netns_exists "$nsn"; then
  >&2 echo "Error: the namespace ($nsn) already exists."
  exit 1
fi



echo "Default values:"
echo "  Device:    $device"
echo "  netns:     $nsn"
echo "  link:      $linkname"
echo "  macvlan:   $mvlan_name"
echo
echo


function add_skip_vpn_ns {
  local _device="$1"
  local _nsn="$2"
  local _mvlan_name="$3"

  if ! command -v dhclient --version &>/dev/null; then
      echo "Error: Install dhclient package.";
      exit
  fi

  if [ -z "$_device" ]; then
    _device="$device"
  fi

  if [ -z "$_nsn" ]; then
    _nsn="$nsn"
  fi

  if [ -z "$_mvlan_name" ]; then
    _mvlan_name="$mvlan_name"
  fi


  sudo ip netns add $_nsn
  sudo ip link add link $_device dev $_mvlan_name type macvlan
  sudo ip link set up $_mvlan_name netns $_nsn
  sudo ip netns exec $_nsn ip link set up lo
  sudo ip netns exec $_nsn ip route add default dev $_mvlan_name metric 50
  sudo ip netns exec $_nsn dhclient -d $_mvlan_name &
}

function run_in_skip_vpn_ns {
  local _background="$1"
  local _nsn="$2"
  local _user="$3"
  local _cmd="$4"

  if [ -z "$_user" ]; then
    _user="$USER"
  fi

  if [ -z "$_cmd" ]; then
    _cmd="$SHELL"
  fi

  if [ -z "$_nsn" ]; then
    _nsn="$nsn"
  fi

  if [ -z "$_background" ]; then
    _background="yes"
  fi

  if [ $_background == "yes" ]; then
    setsid sudo -E ip netns exec $_nsn su $_user -s /usr/bin/bash -c "$_cmd"
  else
    sudo -E ip netns exec $_nsn su $_user -s /usr/bin/bash -c "$_cmd"
  fi
}



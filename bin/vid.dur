#!/bin/bash

# Function to get video duration
get_duration() {
    ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$1"
}

# Initialize total duration
total_duration=0

# Function to format duration
format_duration() {
    local duration=$1
    local days=$(echo "scale=0; $duration / 86400" | bc)
    local hours=$(echo "scale=0; ($duration % 86400) / 3600" | bc)
    local minutes=$(echo "scale=0; ($duration % 3600) / 60" | bc)
    local seconds=$(echo "scale=0; ($duration % 60) / 1" | bc)

    local formatted=""
    if [ "$days" -gt 0 ]; then
        formatted+="${days}d "
    fi
    if [ "$hours" -gt 0 ]; then
        formatted+="${hours}h "
    fi
    if [ "$minutes" -gt 0 ]; then
        formatted+="${minutes}m "
    fi
    formatted+="${seconds}s"

    echo "$formatted"
}

# Process each file
for video_file in "$@"; do
    if [ ! -f "$video_file" ]; then
        echo "Error: File '$video_file' not found!"
        continue
    fi

    duration=$(get_duration "$video_file")
    if [ -z "$duration" ]; then
        echo "Error: Could not retrieve the duration of the video '$video_file'."
        continue
    fi

    total_duration=$(echo "$total_duration + $duration" | bc)

    formatted_duration=$(format_duration "$duration")
    # echo -e "$duration seconds ($formatted_duration): \t\t $video_file"
    echo -e "$formatted_duration: \t\t $video_file"
done

# Output the total duration
formatted_total_duration=$(format_duration "$total_duration")
echo
echo "Total duration: $total_duration seconds"
echo "Total duration: $formatted_total_duration"

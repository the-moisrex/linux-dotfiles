#!/bin/bash

# Script name: clean.privacy
# Purpose: Clean personal information from text files or stdin

# Function to display help information
show_help() {
    echo "Usage: $0 [OPTIONS] [FILE...]"
    echo "Clean personal information from text files or stdin."
    echo ""
    echo "Options:"
    echo "  --help     Display this help message and exit"
    echo ""
    echo "If no FILE is specified, reads from stdin."
    echo ""
    echo "Examples:"
    echo "  $0 file.txt"
    echo "  cat file.txt | $0"
    echo "  $0 file1.txt file2.txt > cleaned_output.txt"
}

# Check for --help option
if [[ "$1" == "--help" ]]; then
    show_help
    exit 0
fi

# Get system information once
current_user=$(whoami)
home_dir="$HOME"
hostname_short=$(hostname)
hostname_full=$(hostname -f 2>/dev/null || hostname)

# Function to replace system-specific information
replace_system_info() {
    local text="$1"
    
    # Replace Projects dir
    text=$(echo "$text" | sed "s|$home_dir/Projects/|/|g")

    # Replace username
    text=$(echo "$text" | sed "s|$current_user|USER|g")
    
    # Replace home directory
    text=$(echo "$text" | sed "s|$home_dir|HOME|g")
    
    # Replace hostname
    text=$(echo "$text" | sed "s|$hostname_short|HOSTNAME|g")
    
    # Replace full hostname
    text=$(echo "$text" | sed "s|$hostname_full|FULL_HOSTNAME|g")
    
    echo "$text"
}

# Function to replace network information
replace_network_info() {
    local text="$1"
    
    # Replace IP addresses
    text=$(echo "$text" | sed -E 's|\b([0-9]{1,3}\.){3}[0-9]{1,3}\b|IP_ADDRESS|g')
    
    # Replace MAC addresses
    text=$(echo "$text" | sed -E 's|\b([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})\b|MAC_ADDRESS|g')
    
    echo "$text"
}

# Function to replace contact information
replace_contact_info() {
    local text="$1"
    
    # Replace email addresses
    text=$(echo "$text" | sed -E 's|\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b|EMAIL_ADDRESS|g')
    
    # Replace phone numbers (XXX) XXX-XXXX
    text=$(echo "$text" | sed -E 's|\b\([0-9]{3}\) [0-9]{3}-[0-9]{4}\b|PHONE_NUMBER|g')
    
    # Replace phone numbers XXX-XXX-XXXX
    text=$(echo "$text" | sed -E 's|\b[0-9]{3}-[0-9]{3}-[0-9]{4}\b|PHONE_NUMBER|g')
    
    echo "$text"
}

# Function to replace identification information
replace_identification_info() {
    local text="$1"
    
    # Replace SSN
    text=$(echo "$text" | sed -E 's|\b[0-9]{3}-[0-9]{2}-[0-9]{4}\b|SSN|g')
    
    echo "$text"
}

# Function to process text and replace all patterns
process_text() {
    local text="$1"
    
    # Apply all replacement functions
    text=$(replace_system_info "$text")
    text=$(replace_network_info "$text")
    text=$(replace_contact_info "$text")
    text=$(replace_identification_info "$text")
    
    # Add more replacement functions here as needed
    
    echo "$text"
}

# Function to process a file
process_file() {
    local file="$1"
    
    # Check if file exists and is readable
    if [[ ! -f "$file" ]]; then
        echo "Error: File '$file' not found." >&2
        exit 1
    fi
    
    if [[ ! -r "$file" ]]; then
        echo "Error: File '$file' is not readable." >&2
        exit 1
    fi
    
    # Process the file
    local content=$(cat "$file")
    process_text "$content"
}

# Main logic
if [[ $# -eq 0 ]]; then
    # No files specified, read from stdin
    stdin=$(cat)
    process_text "$stdin"
else
    # Process each file
    for file in "$@"; do
        process_file "$file"
    done
fi
